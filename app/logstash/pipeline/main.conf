input {
  http_poller {
    urls => {
      url1 => {
        method => get
        url => "http://localhost:8081/api/events"
        headers => {
          "Authorization" => "Basic dXNlcjpwYXNz"
        }
      }
    }
    request_timeout => 60
    schedule => { every => "5s" }
    codec => "json"
  }
}
filter {

  if "endpoint.new" in [tag] {
    mutate {
      rename => {
        "[data][ipv4]" => "ipv4"
        "[data][mac]" => "mac"
        "[data][hostname]" => "hostname"
      }
    }
  }

 if "net.sniff.http.request" in [tag] {
    ruby {
      code => '
        if event.get("[data][data][body]")
          require "base64"
          decoded_body = Base64.decode64(event.get("[data][data][body]"))
          event.set("[data][data][body]", decoded_body)
        end
      '
    }

    mutate {
      rename => {
        "[data][to]" => "to"
        "[data][data][body]" => "Body (User/Pass)"
        "[data][data][headers][Cookie]" => "Cookie"
      }
    }
  }

    ruby {
      code => "
        event.set('data', event.get('data').to_json)
        event.set('@timestamp', LogStash::Timestamp.new(event.get('time')))
        # event.set('[@metadata][id]', Digest::SHA256.hexdigest(event.get('data').to_json + event.get('time')))
        event.set('[@metadata][id]', Digest::SHA256.hexdigest(event.get('@timestamp').to_s))
      "
    }
    
    fingerprint {
      source => "@timestamp"
      target => "[@metadata][fingerprint]"
      method => "SHA256"
    }

  }


output {
  if "net.sniff.http.request" in [tag] {
    if ("Cookie" in [data][data][headers] or [data][data][body] != "" or "User/Pass" in [data]) {
      elasticsearch {
        hosts => ["http://localhost:9200"]
        index => "logs-generic-default"
        document_id => "%{[@metadata][fingerprint]}"
        action => "create"
        user => "elastic"
        password => "${ELASTICSEARCH_PASSWORD}"
      }
    }
  } else {
    elasticsearch {
      hosts => ["http://localhost:9200"]
      index => "logs-generic-default"
      document_id => "%{[@metadata][fingerprint]}"
      action => "create"
      user => "elastic"
      password => "${ELASTICSEARCH_PASSWORD}"
    }
  }
}
